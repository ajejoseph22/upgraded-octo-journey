{"version":3,"sources":["components/navbar/index.jsx","util/constants.js","services/users.js","components/spinner/index.jsx","components/error-page/index.jsx","components/share-feedback/form/question/multiple-choice.jsx","components/share-feedback/form/question/scale.jsx","components/share-feedback/form/question/text.jsx","util/methods.js","components/share-feedback/form/index.jsx","services/questions.js","components/feedback-item-list/index.jsx","components/share-feedback/homepage/index.jsx","components/share-feedback/feedback-completed/index.jsx","components/share-feedback/index.jsx","components/view-feedback/no-feedback/index.jsx","components/view-feedback/feedback-display/rating/index.jsx","components/view-feedback/feedback-display/rating-list/index.jsx","components/view-feedback/feedback-display/questions-area/index.jsx","components/view-feedback/feedback-display/index.jsx","components/view-feedback/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledNavBar","styled","nav","NavBar","to","exact","activeClassName","id","apiUrl","errorObj","questionTypes","getUsers","a","axios","get","data","StyledSpinner","div","Spinner","color","StyledErrorPage","ErrorPage","message","retryFunction","onClick","MultipleChoiceWrapper","MultipleChoice","question","handleSetAnswer","answer","options","map","option","classes","classNames","selected","value","className","label","ScaleWrapper","Scale","rating","onSelect","TextWrapper","Text","onChange","target","placeholder","rows","removeUndefinedValues","obj","Object","keys","reduce","acc","key","undefined","FormWrapper","Form","user","useState","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","answers","setAnswers","useContext","ShareFeedBackContext","setSelectedUser","setIsFinished","AppContext","questions","setFeedback","questionsLength","useMemo","length","currentQuestion","finishAndSubmit","type","firstName","lastName","width","height","src","avatar","alt","disabled","prevState","required","completed","Math","floor","getQuestions","StyledFeedBackItemList","FeedBackItemList","users","handleClickFill","handleClick","showFillButton","clickable","StyledHomePage","HomePage","StyledFeedbackCompletedPage","FeedBackCompleted","feedback","usersFilledFor","usersNotFilledFor","filter","includes","console","log","ShareFeedBackPageWrapper","createContext","ShareFeedBackPage","isLoading","setisLoading","error","setError","selectedUser","isFinished","setUsers","setQuestions","resetLoadingAndErrorState","fetchUsersAndSetState","useCallback","userData","fetchQuestionsAndSetState","questionsData","useEffect","Provider","NoFeedbackWrapper","NoFeedback","StyledRating","Rating","questionType","Array","fill","_","style","background","StyledRatingList","RatingList","questionIndex","StyledQuestionsArea","QuestionsArea","FeedBackDisplayWrapper","FeedBackDisplay","ViewFeedBackPageWrapper","ViewFeedBackPage","isThereFeedBack","some","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd7e3688.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledNavBar = styled.nav`\n  height: 7.5vh;\n  background: #f2f3f4;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 30px;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n\n  & > a,\n  & > div {\n    text-align: center;\n    cursor: pointer;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #031323;\n\n    &.selected:not(#navbar_logo) {\n      border-bottom: 3px solid #ab61e5;\n      height: 95%;\n    }\n  }\n\n  #navbar_logo {\n    width: 20vw;\n    font-weight: bold;\n    font-size: 18px;\n  }\n\n  #navbar_profile-area {\n    width: 15vw;\n    border-left: 1px solid #d9dcde;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst NavBar = () => (\n  <StyledNavBar>\n    <NavLink to=\"/\" exact activeClassName=\"selected\" id=\"navbar_logo\">\n      Honesto\n    </NavLink>\n    <NavLink to=\"/share-feedback\" activeClassName=\"selected\">\n      Share feedback\n    </NavLink>\n    <NavLink to=\"/my-feedback\" activeClassName=\"selected\">\n      My feedback\n    </NavLink>\n    <NavLink to=\"/team-feedback\" activeClassName=\"selected\">\n      Team feedback\n    </NavLink>\n    <NavLink to=\"/teams\" activeClassName=\"selected\">\n      Teams\n    </NavLink>\n    <div>Next Feedback cycle</div>\n    <div id=\"navbar_profile-area\">Profile Area</div>\n  </StyledNavBar>\n);\n\nexport default NavBar;\n","export const apiUrl =\n  \"https://frontend-exercise-api.netlify.app/.netlify/functions/server\";\n\nexport const errorObj = {\n  getUsers: \"An error occured while fetching users\",\n  getQuestions: \"An error occured while fetching questions\",\n};\n\nexport const questionTypes = {\n  scale: \"scale\",\n  multipleChoice: \"multipleChoice\",\n  text: \"text\",\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"../util/constants\";\n\nexport const getUsers = async () => {\n  return (await axios.get(`${apiUrl}/users`)).data;\n};\n","import { HalfCircleSpinner } from \"react-epic-spinners\";\nimport styled from \"styled-components\";\n\nconst StyledSpinner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  height: 85vh;\n`;\n\nconst Spinner = ({ color }) => (\n  <StyledSpinner>\n    <HalfCircleSpinner color={color} />\n  </StyledSpinner>\n);\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nconst StyledErrorPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  height: 85vh;\n`;\n\nconst ErrorPage = ({ message, retryFunction }) => (\n  <StyledErrorPage>\n    <p>{message}</p>\n    <button onClick={retryFunction}>Retry</button>\n  </StyledErrorPage>\n);\n\nexport default ErrorPage;\n","import styled from \"styled-components\";\nimport classNames from \"classnames\";\n\nconst MultipleChoiceWrapper = styled.div`\n  .question {\n    background: #f2f3f4;\n    margin: 10px 0;\n    padding: 10px 20px;\n    border-radius: 4px;\n    cursor: pointer;\n\n    &:hover,\n    &.selected {\n      background: #ab61e5;\n      color: #fff;\n    }\n  }\n`;\n\nconst MultipleChoice = ({ question, handleSetAnswer, answer }) => (\n  <MultipleChoiceWrapper>\n    {question.options.map((option) => {\n      const classes = classNames({\n        question: true,\n        selected: option.value === answer,\n      });\n\n      return (\n        <div\n          key={option.value}\n          onClick={() => handleSetAnswer(option.value)}\n          className={classes}\n        >\n          {option.label}\n        </div>\n      );\n    })}\n  </MultipleChoiceWrapper>\n);\n\nexport default MultipleChoice;\n","import Rating from \"react-rating-scale\";\nimport styled from \"styled-components\";\n\nconst ScaleWrapper = styled.div`\n  padding: 30px 0;\n  width: 100%;\n\n  .rating-0-1-1 {\n    justify-content: space-around;\n  }\n`;\n\nconst Scale = ({ handleSetAnswer, answer }) => (\n  <ScaleWrapper>\n    <Rating rating={answer} onSelect={handleSetAnswer} />\n  </ScaleWrapper>\n);\n\nexport default Scale;\n","import styled from \"styled-components\";\n\nconst TextWrapper = styled.div`\n  margin-bottom: 10px;\n\n  #text {\n    width: 99%;\n    resize: none;\n  }\n`;\n\nconst Text = ({ handleSetAnswer, answer }) => (\n  <TextWrapper>\n    <textarea\n      onChange={({ target }) => handleSetAnswer(target.value)}\n      value={answer || \"\"}\n      id=\"text\"\n      placeholder=\"Say something\"\n      rows=\"10\"\n    />\n  </TextWrapper>\n);\n\nexport default Text;\n","export const removeUndefinedValues = (obj) => {\n  return Object.keys(obj).reduce((acc, key) => {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n};\n","import styled from \"styled-components\";\nimport { useState, useMemo, useContext } from \"react\";\nimport MultipleChoice from \"./question/multiple-choice\";\nimport { questionTypes } from \"../../../util/constants\";\nimport Scale from \"./question/scale\";\nimport Text from \"./question/text\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { removeUndefinedValues } from \"../../../util/methods\";\nimport { ShareFeedBackContext } from \"../index\";\nimport { AppContext } from \"../../../App\";\n\nconst FormWrapper = styled.div`\n  padding: 25px;\n\n  .questions-area {\n    height: 100%;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n    padding: 10px;\n  }\n\n  #back-btn {\n    cursor: pointer;\n    font-size: 13px;\n    text-transform: uppercase;\n  }\n\n  #top-area {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n\n    &_left {\n      display: flex;\n      flex-direction: column;\n    }\n\n    #question {\n      font-size: 28px;\n      font-weight: 500;\n      margin: 3px 0;\n    }\n\n    #helper-text {\n      text-transform: uppercase;\n      font-size: 12px;\n      color: #acb1b6;\n    }\n\n    img {\n      border-radius: 50%;\n    }\n  }\n\n  #controls-area {\n    display: flex;\n    justify-content: space-between;\n\n    button {\n      padding: 10px;\n      background: #fff;\n      border: 1px solid #d9dcde;\n\n      border-radius: 4px;\n\n      :not([disabled]) {\n        :hover {\n          background: #ab61e5;\n          color: #fff;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n\n  #progress-area {\n    margin-top: 20px;\n  }\n`;\n\nconst Form = ({ user }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [answers, setAnswers] = useState({});\n\n  const { setSelectedUser, setIsFinished } = useContext(ShareFeedBackContext);\n  const { questions, setFeedback } = useContext(AppContext);\n\n  const questionsLength = useMemo(() => questions.length, [questions]);\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const handleSetAnswer = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [currentQuestionIndex]: value });\n  };\n\n  const finishAndSubmit = () => {\n    setIsFinished(true);\n\n    setFeedback({ [user.id]: answers });\n  };\n\n  const handlePrevious = () => {\n    setAnswers(\n      removeUndefinedValues({\n        ...answers,\n        [currentQuestionIndex]: selectedAnswers[currentQuestionIndex],\n      })\n    );\n\n    setCurrentQuestionIndex((prevState) => prevState - 1);\n  };\n\n  const handleSkip = () => {\n    if (currentQuestionIndex === questionsLength - 1) finishAndSubmit();\n\n    setAnswers({ ...selectedAnswers, [currentQuestionIndex]: null });\n    setSelectedAnswers({ ...selectedAnswers, [currentQuestionIndex]: null });\n\n    setCurrentQuestionIndex((prevState) => prevState + 1);\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex === questionsLength - 1) finishAndSubmit();\n\n    setAnswers(\n      removeUndefinedValues({\n        ...answers,\n        [currentQuestionIndex]: selectedAnswers[currentQuestionIndex],\n      })\n    );\n\n    setCurrentQuestionIndex((prevState) => prevState + 1);\n  };\n\n  let question;\n\n  if (currentQuestion) {\n    switch (currentQuestion.type) {\n      case questionTypes.multipleChoice:\n        question = (\n          <MultipleChoice\n            answer={selectedAnswers[currentQuestionIndex]}\n            handleSetAnswer={handleSetAnswer}\n            question={currentQuestion}\n          />\n        );\n        break;\n      case questionTypes.scale:\n        question = (\n          <Scale\n            answer={selectedAnswers[currentQuestionIndex]}\n            handleSetAnswer={handleSetAnswer}\n            question={currentQuestion}\n          />\n        );\n        break;\n      case questionTypes.text:\n        question = (\n          <Text\n            answer={selectedAnswers[currentQuestionIndex]}\n            handleSetAnswer={handleSetAnswer}\n            question={currentQuestion}\n          />\n        );\n        break;\n      default:\n        question = null;\n    }\n  }\n\n  return (\n    <FormWrapper>\n      <div id=\"top-area\">\n        <div id=\"top-area_left\">\n          <span\n            onClick={() => {\n              setSelectedUser(null);\n            }}\n            id=\"back-btn\"\n          >\n            &#60; back\n          </span>\n          <span id=\"question\">{currentQuestion.label}</span>\n          <span id=\"helper-text\">\n            Share your feedback about {user.firstName} {user.lastName}\n          </span>\n        </div>\n\n        <img\n          width={58}\n          height={58}\n          src={user.avatar}\n          alt={`${user.firstName}-profile`}\n        />\n      </div>\n      <div className=\"questions-area\">\n        {question}\n        <div id=\"controls-area\">\n          <button disabled={!currentQuestionIndex} onClick={handlePrevious}>\n            Previous\n          </button>\n          <button disabled={currentQuestion?.required} onClick={handleSkip}>\n            Skip\n          </button>\n          <button\n            disabled={!selectedAnswers[currentQuestionIndex]}\n            onClick={handleNext}\n          >\n            Next\n          </button>\n        </div>\n        <div id=\"progress-area\">\n          <ProgressBar\n            completed={Math.floor(\n              (Object.keys(answers).length / questionsLength) * 100\n            )}\n          />\n        </div>\n      </div>\n    </FormWrapper>\n  );\n};\n\nexport default Form;\n","import axios from \"axios\";\nimport { apiUrl } from \"../util/constants\";\n\nexport const getQuestions = async () => {\n  return (await axios.get(`${apiUrl}/questions`)).data;\n};\n","import styled from \"styled-components\";\nimport classNames from \"classnames\";\n\nconst StyledFeedBackItemList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n\n  &.clickable:hover {\n    background: #fbf7fe;\n    cursor: pointer;\n  }\n\n  .profile-image {\n    border-radius: 50%;\n    margin-right: 20px;\n  }\n\n  .user-profile-area {\n    display: flex;\n    align-items: center;\n  }\n\n  button {\n    cursor: pointer;\n    padding: 5px 10px;\n  }\n`;\n\nconst FeedBackItemList = ({\n  users,\n  handleClickFill,\n  handleClick,\n  showFillButton = true,\n}) => {\n  const classes = classNames({\n    \"feedback-item\": true,\n    clickable: !showFillButton,\n  });\n\n  return users.map((user) => (\n    <StyledFeedBackItemList\n      onClick={showFillButton ? () => {} : () => handleClick(user)}\n      key={user.id}\n      className={classes}\n    >\n      <div className=\"user-profile-area\">\n        <img\n          width={58}\n          height={58}\n          src={user.avatar}\n          alt={`${user.firstName}-profile`}\n          className=\"profile-image\"\n        />\n        <span>\n          {user.firstName} {user.lastName}\n        </span>\n      </div>\n      {showFillButton && (\n        <button onClick={() => handleClickFill(user)}>Fill</button>\n      )}\n    </StyledFeedBackItemList>\n  ));\n};\n\nexport default FeedBackItemList;\n","import styled from \"styled-components\";\nimport FeedBackItemList from \"../../feedback-item-list\";\n\nconst StyledHomePage = styled.div`\n  height: 100%;\n\n  #share-feedback-page {\n    &_top-area {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 10px;\n    }\n\n    &_content {\n      box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n      height: 100%;\n      overflow-x: auto;\n    }\n  }\n`;\n\nconst HomePage = ({ users, handleClickFill }) => (\n  <StyledHomePage id=\"share-feedback-page\">\n    <div id=\"share-feedback-page_top-area\">\n      <header>Share Feedback</header>\n      <span>Dropdown</span>\n    </div>\n    <div id=\"share-feedback-page_content\">\n      <FeedBackItemList users={users} handleClickFill={handleClickFill} />\n    </div>\n  </StyledHomePage>\n);\n\nexport default HomePage;\n","import FeedBackItemList from \"../../feedback-item-list\";\nimport { ShareFeedBackContext } from \"../index\";\nimport { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../../App\";\n\nconst StyledFeedbackCompletedPage = styled.div`\n  padding: 25px;\n  height: 90%;\n\n  #top-area {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n\n    &_left {\n      display: flex;\n      flex-direction: column;\n    }\n\n    #message {\n      font-size: 28px;\n      font-weight: 500;\n      margin: 3px 0;\n    }\n\n    #helper-text {\n      text-transform: uppercase;\n      font-size: 12px;\n      color: #acb1b6;\n    }\n  }\n\n  #feedback-complete_page_content {\n    height: 100%;\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n    padding: 10px;\n    overflow: auto;\n  }\n`;\n\nconst FeedBackCompleted = () => {\n  const { handleClickFill } = useContext(ShareFeedBackContext);\n  const { users, feedback } = useContext(AppContext);\n\n  const usersFilledFor = Object.keys(feedback);\n\n  const usersNotFilledFor = users.filter(\n    (user) => !usersFilledFor.includes(user.id)\n  );\n\n  console.log(\"usersFilledFor\", usersFilledFor);\n  console.log(\"usersNotFilledFor\", usersNotFilledFor);\n\n  return (\n    <StyledFeedbackCompletedPage>\n      <div id=\"top-area\">\n        <div id=\"top-area_left\">\n          <span id=\"message\">Thank you for sharing your feedback !</span>\n          <span id=\"helper-text\">\n            \"Continue to give feedback to other team members\"\n          </span>\n        </div>\n      </div>\n      <div id=\"feedback-complete_page_content\">\n        <FeedBackItemList\n          users={usersNotFilledFor}\n          handleClickFill={handleClickFill}\n        />\n      </div>\n    </StyledFeedbackCompletedPage>\n  );\n};\n\nexport default FeedBackCompleted;\n","import styled from \"styled-components\";\nimport {\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n  createContext,\n} from \"react\";\nimport { getUsers } from \"../../services/users\";\nimport Spinner from \"../spinner\";\nimport ErrorPage from \"../error-page\";\nimport Form from \"./form\";\nimport { getQuestions } from \"../../services/questions\";\nimport HomePage from \"./homepage\";\nimport { errorObj } from \"../../util/constants\";\nimport FeedBackCompleted from \"./feedback-completed\";\nimport { AppContext } from \"../../App\";\n\nconst ShareFeedBackPageWrapper = styled.div`\n  width: 600px;\n  height: 60vh;\n  margin: 10vh auto;\n\n  header {\n    font-size: 20px;\n    font-weight: bold;\n  }\n`;\n\nexport const ShareFeedBackContext = createContext(null);\n\nconst ShareFeedBackPage = () => {\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState();\n  const [selectedUser, setSelectedUser] = useState();\n  const [isFinished, setIsFinished] = useState(false);\n\n  const { users, setUsers, questions, setQuestions } = useContext(AppContext);\n\n  const resetLoadingAndErrorState = () => {\n    setError(null);\n    setisLoading(true);\n  };\n\n  const fetchUsersAndSetState = useCallback(async () => {\n    try {\n      resetLoadingAndErrorState();\n\n      const userData = await getUsers();\n      setUsers(userData);\n    } catch (e) {\n      setError(errorObj.getUsers);\n    } finally {\n      setisLoading(false);\n    }\n  }, []);\n\n  const fetchQuestionsAndSetState = async () => {\n    try {\n      resetLoadingAndErrorState();\n\n      const questionsData = await getQuestions();\n      setQuestions(questionsData);\n    } catch (e) {\n      setError(errorObj.getQuestions);\n    } finally {\n      setisLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await fetchUsersAndSetState();\n    })();\n  }, [fetchUsersAndSetState]);\n\n  const handleClickFill = async (user) => {\n    setIsFinished(false);\n    // check if questions are loaded\n    if (!questions) {\n      await fetchQuestionsAndSetState();\n    }\n\n    setSelectedUser(user);\n  };\n\n  if (isLoading) return <Spinner color=\"#000\" />;\n\n  if (error)\n    return (\n      <ErrorPage\n        retryFunction={\n          error === errorObj.getUsers\n            ? fetchUsersAndSetState\n            : fetchQuestionsAndSetState\n        }\n        message={error}\n        color=\"#000\"\n      />\n    );\n\n  return (\n    <ShareFeedBackContext.Provider\n      value={{\n        handleClickFill,\n        setIsFinished,\n        setSelectedUser,\n      }}\n    >\n      <ShareFeedBackPageWrapper>\n        {isFinished ? (\n          <FeedBackCompleted />\n        ) : selectedUser ? (\n          <Form user={selectedUser} />\n        ) : (\n          <HomePage users={users} handleClickFill={handleClickFill} />\n        )}\n      </ShareFeedBackPageWrapper>\n    </ShareFeedBackContext.Provider>\n  );\n};\nexport default ShareFeedBackPage;\n","import styled from \"styled-components\";\n\nconst NoFeedbackWrapper = styled.div`\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n  margin: 20px auto;\n  padding: 40px;\n  text-align: center;\n  width: 40%;\n`;\n\nconst NoFeedback = () => (\n  <NoFeedbackWrapper>No feedback, boss! Check back later :)</NoFeedbackWrapper>\n);\n\nexport default NoFeedback;\n","import { questionTypes } from \"../../../../util/constants\";\nimport styled from \"styled-components\";\n\nconst StyledRating = styled.div`\n  width: 250px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-left: 20px;\n\n  .bar {\n    margin: 0 5px;\n  }\n\n  .text {\n    width: 250px;\n    overflow-wrap: anywhere;\n  }\n\n  .skipped {\n    color: #c0c0c0;\n    text-transform: uppercase;\n  }\n`;\n\nconst Rating = ({ questionType, answer }) => {\n  let rating;\n\n  if (answer != null) {\n    switch (questionType) {\n      case questionTypes.scale:\n        rating = Array(answer)\n          .fill(null)\n          .map((_) => (\n            <div\n              style={{\n                background:\n                  answer > 7 ? \"#2BBF6A\" : answer > 3 ? \"#FF8C21\" : \"#DE521D\",\n                height: \"100%\",\n                width: \"15px\",\n              }}\n              className=\"bar\"\n            />\n          ));\n        break;\n      case questionTypes.multipleChoice:\n        rating = Array(answer)\n          .fill(null)\n          .map((_) => (\n            <div\n              style={{\n                background:\n                  answer > 2 ? \"#2BBF6A\" : answer > 1 ? \"#FF8C21\" : \"#DE521D\",\n                height: \"100%\",\n                width: \"70px\",\n              }}\n              className=\"bar\"\n            />\n          ));\n        break;\n      case questionTypes.text:\n        rating = <span className=\"text\">{answer}</span>;\n        break;\n      default:\n        break;\n    }\n  } else {\n    rating = rating = <span className=\"skipped\">skipped</span>;\n  }\n\n  return <StyledRating>{rating}</StyledRating>;\n};\n\nexport default Rating;\n","import { AppContext } from \"../../../../App\";\nimport { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Rating from \"../rating\";\n\nconst StyledRatingList = styled.div`\n  padding: 10px;\n\n  .question {\n    width: 50%;\n  }\n\n  .question-rating-item {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 0;\n    border-top: 1px solid rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst RatingList = ({ user }) => {\n  const { questions, feedback } = useContext(AppContext);\n\n  return (\n    <StyledRatingList>\n      {questions.map((question, questionIndex) => (\n        <div className=\"question-rating-item\">\n          <div className=\"question\">{question.label}</div>\n          <Rating\n            answer={feedback[user.id][questionIndex]}\n            questionType={question.type}\n          />\n        </div>\n      ))}\n    </StyledRatingList>\n  );\n};\n\nexport default RatingList;\n","import RatingList from \"../rating-list\";\nimport styled from \"styled-components\";\n\nconst StyledQuestionsArea = styled.div`\n  header {\n    font-weight: bold;\n  }\n`;\n\nconst QuestionsArea = ({ user }) => {\n  return (\n    <StyledQuestionsArea>\n      <header>\n        {user.firstName} {user.lastName}'s Feedback\n      </header>\n      <RatingList user={user} />\n    </StyledQuestionsArea>\n  );\n};\nexport default QuestionsArea;\n","import styled from \"styled-components\";\nimport FeedBackItemList from \"../../feedback-item-list\";\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../../../App\";\nimport QuestionsArea from \"./questions-area\";\n\nconst FeedBackDisplayWrapper = styled.div`\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n  margin: 20px auto;\n  width: 70%;\n  display: flex;\n  height: 650px;\n\n  #user-area {\n    width: 40%;\n    border-right: 1px solid rgba(0, 0, 0, 0.25);\n    overflow-x: auto;\n  }\n\n  #questions-area {\n    overflow-x: auto;\n  }\n\n  header {\n    padding: 5px 10px;\n    font-size: 13px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nconst FeedBackDisplay = () => {\n  const { users, feedback } = useContext(AppContext);\n  const [selectedUser, setSelectedUser] = useState();\n\n  const handleClick = (user) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <FeedBackDisplayWrapper>\n      <div id=\"user-area\">\n        <header>Feedback received</header>\n        <FeedBackItemList\n          users={users.filter((user) => feedback[user.id])}\n          showFillButton={false}\n          handleClick={handleClick}\n        />\n      </div>\n      <div id=\"questions-area\">\n        {selectedUser && <QuestionsArea user={selectedUser} />}\n      </div>\n    </FeedBackDisplayWrapper>\n  );\n};\n\nexport default FeedBackDisplay;\n","import styled from \"styled-components\";\nimport NoFeedback from \"./no-feedback\";\nimport FeedBackDisplay from \"./feedback-display\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../../App\";\n\nconst ViewFeedBackPageWrapper = styled.div`\n  padding: 50px 0;\n`;\n\nconst ViewFeedBackPage = () => {\n  const { users, feedback } = useContext(AppContext);\n\n  const isThereFeedBack = users.some((user) =>\n    Object.keys(feedback).includes(user.id)\n  );\n\n  return (\n    <ViewFeedBackPageWrapper>\n      {isThereFeedBack ? <FeedBackDisplay /> : <NoFeedback />}\n    </ViewFeedBackPageWrapper>\n  );\n};\nexport default ViewFeedBackPage;\n","import \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport { Route } from \"react-router-dom\";\nimport ShareFeedBackPage from \"./components/share-feedback\";\nimport ViewFeedBackPage from \"./components/view-feedback\";\nimport { useState, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [questions, setQuestions] = useState();\n  const [feedback, setFeedback] = useState({});\n\n  const handleSetFeedback = (feedback) => {\n    setFeedback((prevState) => ({ ...prevState, ...feedback }));\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        users,\n        setUsers,\n        questions,\n        setQuestions,\n        feedback,\n        setFeedback: handleSetFeedback,\n      }}\n    >\n      <div>\n        <NavBar />\n        <Route exact path=\"/share-feedback\" render={() => <ShareFeedBackPage />} />\n        <Route exact path=\"/my-feedback\" render={() => <ViewFeedBackPage />} />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}